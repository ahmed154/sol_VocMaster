@page "/phrase/{id:int}"

    <div class="container bg-white rounded border p-3">
        <div class="pl-3">
            <div class="row">
                <span style="font-size:18px; color:#8f8f8f;"><a href="/phrase" style="color:#6372C4">Phrases</a> /  @id</span>
            </div>
            <div class="row pt-4">
                <a class="btn btn-primary" href="/phrase/edit/@id" style="background-color:#6372C4"><i class="far fa-edit"></i> Edit</a>
                <a class="btn border ml-1" href="/phrase/new"><i class="far fa-file"></i> New</a>
                <button class="btn border ml-5" @onclick="DeleteConfirm"><i class="far fa-trash-alt"></i> Delete</button>
            </div>
        </div>
    </div>

    <div class="container bg-white border box-shadow p-3 rounded">
        <PhraseForm PhraseVM="PhraseVM" Type="Details" />
    </div>


    @code {

        [Parameter] public int id { get; set; }
        [Inject] public IPhraseService PhraseService { get; set; }
        [Inject] public IJSRuntime JSRuntime { get; set; }
        [Inject] NavigationManager NavigationManager { get; set; }

        PhraseVM PhraseVM { get; set; } = new PhraseVM();

        protected override async Task OnInitializedAsync()
        {
            PhraseVM = await PhraseService.GetPhrase(id);
        }

        protected async Task DeleteConfirm()
        {
            bool result = await JSRuntime.Confirm("Confirmation", $"Are you sure you want to delete {PhraseVM.Phrase.Text} ?", IJSRuntimeExtensionMethods.SweetAlertMessageType.question);
            if (result) await Delete();
        }
        protected async Task Delete()
        {
            PhraseVM createdPhraseVM = await PhraseService.DeletePhrase(PhraseVM.Phrase.Id);

            if (string.IsNullOrEmpty(createdPhraseVM.Exception))
            {
                await JSRuntime.Notfication($"Phrasement {PhraseVM.Phrase.Text} has been deleted successfully!", IJSRuntimeExtensionMethods.SweetAlertMessageType.success, 3000);
                NavigationManager.NavigateTo($"/phrase");
            }
            else
            {
                await JSRuntime.Notfication(createdPhraseVM.Exception, IJSRuntimeExtensionMethods.SweetAlertMessageType.error, 10000);
            }
        }
    }
